{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["UserStore","extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","res","json","result","success","resetForm","alert","msg","console","log","setInputValue","doLogin","App","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa71185c.chunk.js","sourcesContent":["import{ extendObservable} from 'mobx';\r\n\r\nclass UserStore{\r\n    constructor(){\r\n        extendObservable(this, {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n        }) \r\n    }\r\n}    \r\nexport default UserStore;","import React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n     <div className=\"inputField\">\r\n       <input\r\n          className='input'\r\n          type={this.props.type}\r\n          placeholder={this.props.placeholder}\r\n          value={this.props.value}\r\n          onChange={ (e) => this.props.onChange(e.target.value)}\r\n        />\r\n       </div>\r\n    );\r\n  }\r\n}\r\nexport default InputField;","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component {\r\n\r\n  render() {\r\n  return (\r\n    <div className=\"submitbutton\">\r\n        <button\r\n          className='btn'\r\n          disabled={this.props.disabled}\r\n          onClick={ () => this.props.onClick()}\r\n        >\r\n          {this.props.text}\r\n        </button>\r\n      </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default SubmitButton;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore';\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n        username: '',\r\n        password: '',\r\n        buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n    val = val.trim();\r\n    if(val.length > 12) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n\r\n  async doLogin() {\r\n\r\n    if (!this.state.username) {\r\n      return;\r\n    }\r\n    if(!this.state.password){\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      buttonDisabled: true\r\n    })\r\n\r\n    try {\r\n\r\n      let res = await fetch('/login',{\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      });\r\n\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username=result.username;\r\n      }\r\n\r\n      else if (result && result.success === false) {\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n\r\n    }\r\n\r\n    catch(e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n  return (\r\n    <div className=\"loginForm\">\r\n      \r\n        <h4>Welcome to the Vishwa's Login Page</h4>\r\n        <InputField\r\n          type='text'\r\n          placeholder='Username'\r\n          value={this.state.username ? this.state.username : ''}\r\n          onChange={ (val) => this.setInputValue('username', val)} \r\n        />\r\n\r\n        <InputField\r\n          type='password'\r\n          placeholder='Password'\r\n          value={this.state.password ? this.state.password : ''}\r\n          onChange={ (val) => this.setInputValue('password', val)} \r\n        />\r\n\r\n        <SubmitButton\r\n          text='Login'\r\n          disabled={this.state.buttonDisabled}\r\n          onClick={ () => this.doLogin() }\r\n        />\r\n\r\n    </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default LoginForm;","import React        from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from './stores/UserStore';\nimport LoginForm from './LoginForm';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component {\n\n    async componentDidMount() {\n      try {\n          let res = await fetch('/isLoggedIn',{\n            method:'post',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type' : 'application/json'\n            }\n          });\n\n          let result = await res.json();\n\n          if (result && result.success) {\n            UserStore.loading=false;\n            UserStore.isLoggedIn=true;\n            UserStore.username = result.username;\n          }\n          else {\n            UserStore.loading = false;\n            UserStore.isLoggedIn=false;\n          }\n      }\n      catch(e) {\n          UserStore.loading=false;\n          UserStore.isLoggedIn=false;\n      }\n    }\n\n    \n      async doLogout() {\n        try {\n            let res = await fetch('/logout',{\n              method:'post',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type' : 'application/json'\n              }\n            });\n  \n            let result = await res.json();\n  \n            if (result && result.success) {\n              UserStore.isLoggedIn=false;\n              UserStore.username =  '';\n            }\n            \n        }\n        catch(e) {\n            console.log(e)\n        }\n      }\n\n      render() {\n    \n      if(UserStore.loading) {\n        return(\n          <div className=\"app\">\n            <div className='container'>\n              Loading, Please wait for a moment..\n            </div>\n          </div>\n        );\n      }\n      \n      else {\n          if (UserStore.isLoggedIn){\n            return (\n              <div className=\"app\">\n                <div className='container'>\n                  Welcome {UserStore.username}\n\n                  {/* <SubmitButton\n                    text={'Log out'}\n                    disabled={false}\n                    onClick={ () => this.doLogout()}\n                    /> */}\n\n                </div>\n              </div>\n            );\n          }\n         \n      return(\n      <div className=\"app\">\n         <div className='container'>\n                  {/* <SubmitButton\n                    text={'cout'}\n                    disabled={false}\n                    onClick={ () => this.doLogout()}\n                    /> */}\n           <LoginForm />\n         </div>\n      </div>\n    );\n  }\n}\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}